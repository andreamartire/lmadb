#labels Phase-Deploy,Phase-Implementation,Featured
_Lo scopo della guida è installare un DBMS, PostgreSQL (preferibile) o Oracle XE, e il web-server Apache Tomcat, e configurare un ambiente eclipse in cui lavorare_

=== Requisiti minimi: ===
  * <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">Java Development Kit - jdk </a>
  * <a href="http://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/helios/SR1/eclipse-jee-helios-SR1-linux-gtk.tar.gz">Eclipse for Java EE</a>
  * Un po di pazienza
  
<hr> 

= DBMS =

== _Oracle 10G XE_ == 

=== Installazione ===
    Windows -> scaricare e installare <a href="http://download.oracle.com/otn/nt/oracle10g/xe/10201/OracleXE.exe">questo exe</a> <br>
    GNU/Linux -> scaricare <a href="http://download.oracle.com/otn/linux/oracle10g/xe/10201/oracle-xe_10.2.0.1-1.0_i386.deb>questo deb</a>

=== Configurazione === 
    GNU/Linux -> `sudo /etc/init.d/oracle-xe configure` inserite una pass, infine scegliete se avviarlo automaticamente o no<br>
    Windows -> durante l'installazione viene chiesta la pass e viene visualizzata una finestra con le info necessarie

=== Far partire il server oracle ===
    GNU/Linux -> `sudo /etc/init.d/oracle-xe restart`<br>
    Windows -> viene installato come servizio quindi parte sempre all'avvio..

=== Primo avvio ===
    nel vostro browser preferito andate all'indirizzo: http://localhost:8080/apex <br>
    appare la pagina di login in oracle, inserite "system" come username e come password quella scelta in fase di configurazione <br>
    ora siete nella pagina di gestione del dbms. Administration -> DataBase Users -> Create per creare il vostro account <br>
    scegliete una username e una password e spuntate la casellina DBA dopo di che cliccate su create <br>
    ora effettuate il logout e poi il login con l'account appena creato <br>

    questa è l'interfaccia da DBA, per creare tabelle graficamente andate in Object Browser -> Create, per scrivere codice SQL andate in SQL -> SQL Commands <br>

    per caricare lo script di creazione del nostro db andate in SQL -> SQL Scripts <br>
    qui scegliete la View "Details" e cliccate su Go <br>
    dovreste vedere "no data found"...per caricare lo script cliccate sul pulsante Upload, sfoglia per arrivare al file e poi Upload <br>
    ora trovate il file nella tabella, cliccate sul semaforino Run e poi confermate col pulsante Run <br>
    per vedere il risultato dell'importazione cliccate su View Results<br>
    se tutto è andato bene dovreste vedere: With Errors 0 <br>

    a questo punto il db è caricato sul server oracle...per vederlo potete tornare alla home e scegliere Object Browser
 
<br><br>

== _PostgreSQL 8.4_ ==

=== Installazione ===
    
    GNU/Linux -> `$ sudo apt-get install postgresql phppgadmin`
	
        _postgresql è l'applicazione dbms vera e propria, phppgadmin è l'applicativo web per gestire il dbms, qualcosa di simile all'apex di oracle._
	  
        <b>NB: riavviare il sistema dopo l'installazione anche se non viene chiesto</b>
	  
	  
=== Configurazione e Creazione database ===

    Impostazione di una password per il superuser postgres: `$ sudo passwd postgres`
	
    Login come superutente: `$ su postgres`
		
    Lanciamo il prompt di comandi SQL di postgres: `$ psql`
		
    Creiamo il nostro utente dba: `# CREATE USER basididati WITH PASSWORD 'basididati' CREATEDB;`
		
    Creiamo il nostro database: `# CREATE DATABASE database WITH OWNER basididati;`
		
    Usciamo da psql: `# \q`
			
    Logout postgres: `$ exit`


=== Importazione script SQL per la definizione del database ===

    Entrare nell'ambiente phpPgAdmin da browser:
        http://localhost/phppgadmin
		
    Nel menu a sinistra cliccare su "PostgreSQL"
	
    Cliccare su "database"
	
    Nella pagina che appare cliccare su "SQL" nella barra delle icone
	
    Cliccare su "Sfoglia" e selezionare lo script SQL da caricare
	
    Cliccare su "Esegui"
	
<hr> 

= TOMCAT =
  
=== Ottenere Tomcat 6.x ===
Scaricare la versione 6 di tomcat: <br>
  * GNU/Linux - http://apache.panu.it/tomcat/tomcat-6/v6.0.24/bin/apache-tomcat-6.0.24.tar.gz
  * Windows - http://apache.panu.it/tomcat/tomcat-6/v6.0.24/bin/apache-tomcat-6.0.24.exe
  
=== Installazione ===

  * GNU/Linux: 
  		Estrarre l'archivio e copiare la cartella tomcat estratta nella directory 
  		in cui si vuole installarlo. (in questo esempio /usr/local/tomcat)<br>
  		Aprire come root il file conf/server.xml e cambiare porta da 8080 a 8181:
  		{{{  		
<Connector port="8181" protocol="HTTP/1.1" 
connectionTimeout="20000" 
redirectPort="8443" />
  		}}}
  		Per avviare il server: sh /usr/local/tomcat/bin/startup.sh<br>
  		Per fermare il server: sh /usr/local/tomcat/bin/shutdown.sh
  		
  * Windows: 
  		Eseguire l'eseguibile scaricato e seguire l'installazione. Scegliere "full" come tipo di installazione. Scegliere la porta 8181 e impostare uno username e una password. <br> 
  		A fine installazione scegliere di avviare tomcat.<br>
  		Tomcat verrà installato nella directory: C:\Programmi\Apache Software Foundation\Tomcat 6.0
  	
Una volta installato ed avviato il server aprire un browser e inserire http://127.0.0.1:8181/ nella barra degli indirizzi; se viene visualizzata la pagina di benvenuto di tomcat l'installazione è andata a buon fine.

Per testare ulteriormente il server web creare un file test.html nella directory webapps/ROOT di tomcat, contenente questo testo:

{{{
<html>
  <head>
    <title>Test Tomcat</title>
  </head>
  <body>
    <h1>Prova andata a buon fine</h1>
  </body>
</html>
}}}

Da browser inserire http://127.0.0.1:8181/test.html, il risultato dovrebbe essere
una pagina dal titolo "Test Tomcat" e contenente "Prova andata a buon fine"

=== Configurazione di tomcat ===
		Per creare un utente manager di tomcat, aprire il file tomcat-users.xml nella cartella conf/ di tomcat e inserire all'interno dei tag <tomcat-users> .. </tomcat-users>:
{{{
<role rolename="manager"/>
<user username="USERNAME" password="PASSWORD" roles="manager"/>
}}}
		Per testare la buona riuscita dell'operazione, riavviare tomcat, andare su http://127.0.0.1:8181/manager/html e inserire nome utente e password scritti nel file.<br>
		Dovrebbe caricarsi la pagina del manager di tomcat.

		Per far si che le servlet e le jsp create possono connettersi al database, bisogna importare in tomcat i driver JDBC del DBMS in uso:
		Copiare i driver JDBC del DBMS nella cartella lib di tomcat <br>
  		(Windows > C:\Programmi\Apache Software Foundation\Tomcat 6.0\lib <br>   		GNU/Linux > /usr/local/tomcat/lib ). <br>
  		Per Oracle copiare il jar <a href="http://download.oracle.com/otn/utilities_drivers/jdbc/10204/ojdbc14.jar">ojdbc14.jar</a><br>
  		Per postgreSQL copiare il jar <a href="http://jdbc.postgresql.org/download/postgresql-8.4-701.jdbc4.jar">postgresql-8.4-701.jdbc4.jar</a>
		
		_OPZIONALE: se non volete creare la connessione col classico Class.forName etc_<br>
		Aprire il file context.xml nella cartella conf di tomcat con un editor di testo e sostituire la
		parte interna al tag <context> </context> con la seguente:<br>
{{{
<Resource auth="Container" driverClassName="oracle.jdbc.OracleDriver" maxActive="4" maxIdle="2" 
maxWait="5000" name="jdbc/oraclexe" password="TUAPASSWORD" type="javax.sql.DataSource" 
url="jdbc:oracle:thin:@localhost:1521:xe" username="TUOUSERNAME"/>

<Resource auth="Container" driverClassName="org.postgresql.Driver" maxActive="4" maxIdle="2" 
maxWait="5000" name="jdbc/postgres" password="TUAPASSWORD" type="javax.sql.DataSource" 
url="jdbc:postgresql://localhost/database" username="TUOUSERNAME"/>
}}}
		Salvare il file e passare ad eclipse.

=== Integrazione in Eclipse EE ===

1. *Creare il server tomcat per eclipse*
  * New -> Other -> Server -> Server
  * Server's Host Name: localhost
  * Select the server type -> Apache -> tomcat v6.0 Server
  * next
  * tomcat installation directory: /usr/local/tomcat
  * finish
  
2. *Creare un progetto*
  * New -> Dynamic Web Project
  * Project name: your project name
  * Target Runtime: Apache Tomcat v6.0
  * finish

3. *Creare servlet e jsp*
  * click destro sul progetto appena creato
  * New -> Servlet
  * Class name: TestServlet
  * Finish

Si aprirà nell'editor la servlet appena creata, con già scritte le intestazioni dei metodi doGet e doPost; <br>
Copiare nel metodo doGet:
{{{
PrintWriter out = response.getWriter();

out.println( 
		"<html>" +
		   "<head>" +
		      "<title>Test Servlet</title>" +
		   "</head>" +
		   "<body>" +
		      "<center><font size=4>Test Servlet ok!</font><center>" +
		   "</body>" +
		"</html>" 
);
}}}

Stoppare il server tomcat se avviato
  * Windows: click destro sull'icona di tomcat nella barra delle applicazione, e selezionare Stop Service; 
    Per evitare che si avvii automaticamente: click destro -> Configure -> Startup type: Manual -> Stop -> Ok
  * GNU/Linux: eseguire lo script shutdown.sh

Eseguire la servlet: Click destro -> Run as -> Run on Server<br>
Se tutto è andato bene apparirà una pagina nel web browser con il test Test Servlet ok.



<p><p>